// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.25.0
// source: user.sql

package postgresql

import (
	"context"
	"time"

	"github.com/google/uuid"
)

const getUser = `-- name: GetUser :one
SELECT
  users.id,
  users.email,
  users.hashed_password,
  users.role_id,
  users.created_at,
  users.updated_at,
  roles.id,
  roles.name
FROM users JOIN roles ON users.role_id = roles.id
WHERE users.id = $1
LIMIT 1
`

type GetUserRow struct {
	ID             uuid.UUID
	Email          string
	HashedPassword string
	RoleID         string
	CreatedAt      time.Time
	UpdatedAt      time.Time
	ID_2           int32
	Name           string
}

func (q *Queries) GetUser(ctx context.Context, id uuid.UUID) (GetUserRow, error) {
	row := q.db.QueryRowContext(ctx, getUser, id)
	var i GetUserRow
	err := row.Scan(
		&i.ID,
		&i.Email,
		&i.HashedPassword,
		&i.RoleID,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.ID_2,
		&i.Name,
	)
	return i, err
}
